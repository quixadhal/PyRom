Pyom and ROM's game loop and timing mechanisms have some noteworthy differences.

In ROM everything ran on a loop that occurred on each PULSE. This defaulted to 4 times per second, and 12 times per combat round. This loop managed everything in the game, including connections, user input, output, as well as standard game mechanics like the combat loop and ability lag.

Pyom changes up the formula in a positive way for MUD developers. First off, we separated out the game loop and connection/input handling. Now user input (and game output) can happen almost instantaneously, offering one of the fastest responding MUD frameworks around. Connection negotiation and handshake is also much faster, due to not being locked into a 250ms interval.

The changes to player input does have some minor effect on gameplay - in some scenarios you may not want users to be able to input commands as quickly as the interpreter will allow it - such as eating, drinking, wearing gear, or chatting. If this is the case, you can add wait handlers in the interpreter itself.

To configure the speed of gameplay, you can play around with several values in merc.py:

PULSE_PER_SECOND
PULSE_AREA
PULSE_VIOLENCE
PULSE_MOBILE
PULSE_TICK
